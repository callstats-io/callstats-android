apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
  compileSdkVersion compileSdk

  defaultConfig {
    applicationId "io.callstats.demo"
    minSdkVersion minSdk
    targetSdkVersion targetSdk
    versionCode versionCode
    versionName versionName
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation useRemoteLib() ? "io.callstats:callstats:$versionName" : project(':library')

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
  implementation "com.android.support:appcompat-v7:$supportVersion"
  implementation "com.android.support:design:$supportVersion"
  implementation "com.android.support:cardview-v7:$supportVersion"
  implementation "io.jsonwebtoken:jjwt:$jjwtVersion"
  implementation "com.madgag.spongycastle:prov:$spongyCastleVersion"
  implementation "org.webrtc:google-webrtc:$webRtcVersion"
  implementation ("io.socket:socket.io-client:$socketIoVersion") {
    // excluding org.json which is provided by Android
    exclude group: 'org.json', module: 'json'
  }

  testImplementation "junit:junit:$junitVersion"
}

boolean useRemoteLib() {
  def properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
  return Boolean.valueOf(properties.getProperty('useRemoteLib') ?: false)
}